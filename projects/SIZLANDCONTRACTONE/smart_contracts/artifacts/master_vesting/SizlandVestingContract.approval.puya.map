{
  "version": 3,
  "sources": [
    "../../master_vesting/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DQ;AAAW;AAAX;AAEA;AAAuB;;AAAvB;AAJR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AAyDK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AApCL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAoCK;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAjBL;;;AAAA;AAAA;;AAiBK;;;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AANL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAMK;;;AAAA;;AANL;;AAAA;;;;;;;;;AAMA;;;AAGe;;AAAc;;AAAd;AAAP;AAGA;AAAA;;AAAA;AAGA;;AAAA;;;;AAER;;;AAIY;;AAAc;;AAAd;AAAA;;;AAAwC;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAxC;;;;AADJ;AAKO;AAAA;AAAA;AAAA;AAAA;AAAP;AAGA;AAAA;;AAAA;AAGA;AACmB;;;;;;;;AADnB;;;AAAA;;;AAAA;;;;;;AAKR;;;AAUY;;AAAc;;AAAd;AADJ;AAGgC;;AAEb;AAFa;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAMZ;AANY;AAAhC;;AAAA;AAAA;;AASR;;;AAEiB;;AACM;;AAAf;AADA;;AAIO;AAAA;AAAA;;AAAP;AAGa;AAAA;AAGb;AAAkB;;AAAA;AAClB;;AAAa;;AAAA;AAAb;AAAA;;AAAA;;AACA;;AAAa;;AAAA;AAAb;AAAA;;AAAA;;AACA;;AAAiB;;AAAA;AAAjB;AAAA;;AAAA;;AACA;;AAAiB;;AAAA;AAAjB;;AACA;;AAAmB;AAAA;AAAnB;;AAGO;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;AAAkC;;AAAlC;AAAP;AAGW;AACR;AAAX;;;;;AAOQ;;AAAA;AAAA;;AAAY;AACZ;AAAA;AAGA;AAC8D;AAAA;AAAA;AAAA;;;;;;;;;;;;;AAD9D;;;AAAA;;;AAAA;AAMqB;;AAAA;AACU;;AAAA;AAAZ;AACJ;;AAAA;AACA;;AAAA;AACI;;AAAA;AACC;;AAAA;AANO;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAA3B;;AAbI;;AAAA;;AAAU;AACA;;AAAA;AAAV;;AAAS;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.master_vesting.contract.SizlandVestingContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 4"
    },
    "6": {
      "op": "bytecblock \"asa\" \"master_contract\" 0x0000000000000000"
    },
    "37": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "39": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "42": {
      "op": "bytec_0 // \"asa\"",
      "defined_out": [
        "\"asa\""
      ],
      "stack_out": [
        "\"asa\""
      ]
    },
    "43": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"asa\"",
        "0"
      ],
      "stack_out": [
        "\"asa\"",
        "0"
      ]
    },
    "44": {
      "op": "app_global_put",
      "stack_out": []
    },
    "45": {
      "op": "bytec_1 // \"master_contract\"",
      "defined_out": [
        "\"master_contract\""
      ],
      "stack_out": [
        "\"master_contract\""
      ]
    },
    "46": {
      "op": "global ZeroAddress",
      "defined_out": [
        "\"master_contract\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"master_contract\"",
        "new_state_value%0#0"
      ]
    },
    "48": {
      "op": "app_global_put",
      "stack_out": []
    },
    "49": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "51": {
      "op": "bz main_bare_routing@9",
      "stack_out": []
    },
    "54": {
      "op": "pushbytess 0x9a0b1d4f 0x2826b202 0x6e59b7ad 0xf1577726 // method \"initialize(account,asset)void\", method \"opt_into_asset(asset)void\", method \"set_allocation(account,uint64,uint64,uint64,uint64)void\", method \"claim()void\"",
      "defined_out": [
        "Method(claim()void)",
        "Method(initialize(account,asset)void)",
        "Method(opt_into_asset(asset)void)",
        "Method(set_allocation(account,uint64,uint64,uint64,uint64)void)"
      ],
      "stack_out": [
        "Method(initialize(account,asset)void)",
        "Method(opt_into_asset(asset)void)",
        "Method(set_allocation(account,uint64,uint64,uint64,uint64)void)",
        "Method(claim()void)"
      ]
    },
    "76": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(claim()void)",
        "Method(initialize(account,asset)void)",
        "Method(opt_into_asset(asset)void)",
        "Method(set_allocation(account,uint64,uint64,uint64,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(initialize(account,asset)void)",
        "Method(opt_into_asset(asset)void)",
        "Method(set_allocation(account,uint64,uint64,uint64,uint64)void)",
        "Method(claim()void)",
        "tmp%2#0"
      ]
    },
    "79": {
      "op": "match main_initialize_route@5 main_opt_into_asset_route@6 main_set_allocation_route@7 main_claim_route@8",
      "stack_out": []
    },
    "89": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "90": {
      "op": "return",
      "stack_out": []
    },
    "91": {
      "block": "main_claim_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "93": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "94": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "95": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "97": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "98": {
      "callsub": "smart_contracts.master_vesting.contract.SizlandVestingContract.claim",
      "op": "callsub claim"
    },
    "101": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "102": {
      "op": "return",
      "stack_out": []
    },
    "103": {
      "block": "main_set_allocation_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "105": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "106": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "107": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "109": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "110": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "113": {
      "op": "btoi",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "114": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "116": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "119": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "122": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "125": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "128": {
      "callsub": "smart_contracts.master_vesting.contract.SizlandVestingContract.set_allocation",
      "op": "callsub set_allocation",
      "stack_out": []
    },
    "131": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "132": {
      "op": "return",
      "stack_out": []
    },
    "133": {
      "block": "main_opt_into_asset_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "135": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "136": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "137": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "139": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "140": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "143": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "144": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "146": {
      "callsub": "smart_contracts.master_vesting.contract.SizlandVestingContract.opt_into_asset",
      "op": "callsub opt_into_asset",
      "stack_out": []
    },
    "149": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "150": {
      "op": "return",
      "stack_out": []
    },
    "151": {
      "block": "main_initialize_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "153": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "154": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "155": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "157": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "158": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "161": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "162": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "164": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "167": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "168": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "170": {
      "callsub": "smart_contracts.master_vesting.contract.SizlandVestingContract.initialize",
      "op": "callsub initialize",
      "stack_out": []
    },
    "173": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "174": {
      "op": "return",
      "stack_out": []
    },
    "175": {
      "block": "main_bare_routing@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "177": {
      "op": "bnz main_after_if_else@11",
      "stack_out": []
    },
    "180": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "182": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "183": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "184": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "185": {
      "op": "return",
      "stack_out": []
    },
    "186": {
      "subroutine": "smart_contracts.master_vesting.contract.SizlandVestingContract.initialize",
      "params": {
        "master#0": "bytes",
        "asset#0": "uint64"
      },
      "block": "initialize",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "189": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "191": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "193": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "194": {
      "error": "Only creator can initialize",
      "op": "assert // Only creator can initialize",
      "stack_out": []
    },
    "195": {
      "op": "bytec_1 // \"master_contract\"",
      "defined_out": [
        "\"master_contract\""
      ],
      "stack_out": [
        "\"master_contract\""
      ]
    },
    "196": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"master_contract\"",
        "master#0 (copy)"
      ],
      "stack_out": [
        "\"master_contract\"",
        "master#0 (copy)"
      ]
    },
    "198": {
      "op": "app_global_put",
      "stack_out": []
    },
    "199": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "201": {
      "callsub": "smart_contracts.master_vesting.contract.SizlandVestingContract.opt_into_asset",
      "op": "callsub opt_into_asset",
      "stack_out": []
    },
    "204": {
      "retsub": true,
      "op": "retsub"
    },
    "205": {
      "subroutine": "smart_contracts.master_vesting.contract.SizlandVestingContract.opt_into_asset",
      "params": {
        "asset#0": "uint64"
      },
      "block": "opt_into_asset",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "208": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "210": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "212": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "213": {
      "op": "bnz opt_into_asset_bool_true@2",
      "stack_out": []
    },
    "216": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "218": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "219": {
      "op": "bytec_1 // \"master_contract\"",
      "defined_out": [
        "\"master_contract\"",
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "\"master_contract\""
      ]
    },
    "220": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "221": {
      "error": "check self.master_contract exists",
      "op": "assert // check self.master_contract exists",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "222": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "223": {
      "op": "bz opt_into_asset_bool_false@3",
      "stack_out": []
    },
    "226": {
      "block": "opt_into_asset_bool_true@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "227": {
      "block": "opt_into_asset_bool_merge@4",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "Unauthorized",
      "op": "assert // Unauthorized",
      "defined_out": [],
      "stack_out": []
    },
    "228": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "229": {
      "op": "bytec_0 // \"asa\"",
      "defined_out": [
        "\"asa\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"asa\""
      ]
    },
    "230": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "231": {
      "error": "check self.asa exists",
      "op": "assert // check self.asa exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "232": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "233": {
      "error": "ASA already opted in",
      "op": "assert // ASA already opted in",
      "stack_out": []
    },
    "234": {
      "op": "bytec_0 // \"asa\"",
      "stack_out": [
        "\"asa\""
      ]
    },
    "235": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"asa\"",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "\"asa\"",
        "asset#0 (copy)"
      ]
    },
    "237": {
      "op": "app_global_put",
      "stack_out": []
    },
    "238": {
      "op": "itxn_begin"
    },
    "239": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "241": {
      "op": "frame_dig -1",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "asset#0 (copy)"
      ]
    },
    "243": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "245": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "247": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "248": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "250": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "251": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "253": {
      "op": "itxn_submit"
    },
    "254": {
      "retsub": true,
      "op": "retsub"
    },
    "255": {
      "block": "opt_into_asset_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "256": {
      "op": "b opt_into_asset_bool_merge@4"
    },
    "259": {
      "subroutine": "smart_contracts.master_vesting.contract.SizlandVestingContract.set_allocation",
      "params": {
        "beneficiary#0": "bytes",
        "total_allocation#0": "bytes",
        "start_time#0": "bytes",
        "cliff_time#0": "bytes",
        "vesting_period#0": "bytes"
      },
      "block": "set_allocation",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "262": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "264": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "266": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "267": {
      "error": "Only the creator can call this method",
      "op": "assert // Only the creator can call this method",
      "stack_out": []
    },
    "268": {
      "op": "frame_dig -4",
      "defined_out": [
        "total_allocation#0 (copy)"
      ],
      "stack_out": [
        "total_allocation#0 (copy)"
      ]
    },
    "270": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "total_allocation#0 (copy)"
      ],
      "stack_out": [
        "total_allocation#0 (copy)",
        "0x0000000000000000"
      ]
    },
    "271": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "272": {
      "op": "frame_dig -3",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "start_time#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "start_time#0 (copy)"
      ]
    },
    "274": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "275": {
      "op": "frame_dig -2",
      "defined_out": [
        "cliff_time#0 (copy)",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "cliff_time#0 (copy)"
      ]
    },
    "277": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0"
      ]
    },
    "278": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "vesting_period#0 (copy)"
      ],
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "vesting_period#0 (copy)"
      ]
    },
    "280": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%5#0"
      ]
    },
    "281": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "282": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%6#0"
      ]
    },
    "283": {
      "op": "frame_dig -5",
      "defined_out": [
        "beneficiary#0 (copy)",
        "encoded_tuple_buffer%6#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%6#0",
        "beneficiary#0 (copy)"
      ]
    },
    "285": {
      "op": "swap",
      "stack_out": [
        "beneficiary#0 (copy)",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "286": {
      "op": "box_put",
      "stack_out": []
    },
    "287": {
      "retsub": true,
      "op": "retsub"
    },
    "288": {
      "subroutine": "smart_contracts.master_vesting.contract.SizlandVestingContract.claim",
      "params": {},
      "block": "claim",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "291": {
      "op": "txn Sender"
    },
    "293": {
      "op": "global LatestTimestamp"
    },
    "295": {
      "op": "dup"
    },
    "296": {
      "op": "txn Sender",
      "defined_out": [
        "current_time#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "sender#0"
      ]
    },
    "298": {
      "op": "dup",
      "defined_out": [
        "current_time#0",
        "sender#0",
        "sender#0 (copy)"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "sender#0",
        "sender#0 (copy)"
      ]
    },
    "299": {
      "op": "box_len",
      "defined_out": [
        "current_time#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "sender#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "300": {
      "op": "bury 1",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "sender#0",
        "maybe_exists%0#0"
      ]
    },
    "302": {
      "error": "No allocation found",
      "op": "assert // No allocation found",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "sender#0"
      ]
    },
    "303": {
      "op": "box_get",
      "defined_out": [
        "allocation#0",
        "current_time#0",
        "maybe_exists%1#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "allocation#0",
        "maybe_exists%1#0"
      ]
    },
    "304": {
      "error": "check self.allocations entry exists",
      "op": "assert // check self.allocations entry exists",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "allocation#0"
      ]
    },
    "305": {
      "op": "dup",
      "defined_out": [
        "allocation#0",
        "allocation#0 (copy)",
        "current_time#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "allocation#0",
        "allocation#0 (copy)"
      ]
    },
    "306": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "allocation#0",
        "allocation#0 (copy)",
        "current_time#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "allocation#0",
        "allocation#0 (copy)",
        "40"
      ]
    },
    "308": {
      "op": "extract_uint64",
      "defined_out": [
        "allocation#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "allocation#0",
        "last_claim_time#0"
      ]
    },
    "309": {
      "op": "dig 1",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "allocation#0",
        "last_claim_time#0",
        "allocation#0 (copy)"
      ]
    },
    "311": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "allocation#0",
        "allocation#0 (copy)",
        "current_time#0",
        "last_claim_time#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "allocation#0",
        "last_claim_time#0",
        "allocation#0 (copy)",
        "24"
      ]
    },
    "313": {
      "op": "extract_uint64",
      "defined_out": [
        "allocation#0",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "allocation#0",
        "last_claim_time#0",
        "cliff_time#0"
      ]
    },
    "314": {
      "op": "dup",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "allocation#0",
        "last_claim_time#0",
        "cliff_time#0",
        "cliff_time#0 (copy)"
      ]
    },
    "315": {
      "op": "cover 2",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "current_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0",
        "cliff_time#0"
      ]
    },
    "317": {
      "op": "cover 4",
      "defined_out": [
        "allocation#0",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "current_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0"
      ]
    },
    "319": {
      "op": "dig 2",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "current_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0",
        "allocation#0 (copy)"
      ]
    },
    "321": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "allocation#0",
        "allocation#0 (copy)",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "current_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0",
        "allocation#0 (copy)",
        "16"
      ]
    },
    "323": {
      "op": "extract_uint64",
      "defined_out": [
        "allocation#0",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0",
        "start_time#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "current_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0",
        "start_time#0"
      ]
    },
    "324": {
      "op": "dup",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "current_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0",
        "start_time#0",
        "start_time#0 (copy)"
      ]
    },
    "325": {
      "op": "cover 4",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0",
        "start_time#0"
      ]
    },
    "327": {
      "op": "cover 5",
      "defined_out": [
        "allocation#0",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0",
        "start_time#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0"
      ]
    },
    "329": {
      "op": "dig 2",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0",
        "allocation#0 (copy)"
      ]
    },
    "331": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "allocation#0",
        "allocation#0 (copy)",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0",
        "start_time#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0",
        "allocation#0 (copy)",
        "32"
      ]
    },
    "333": {
      "op": "extract_uint64",
      "defined_out": [
        "allocation#0",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0",
        "start_time#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0",
        "vesting_period#0"
      ]
    },
    "334": {
      "op": "dup",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "cliff_time#0",
        "last_claim_time#0",
        "vesting_period#0",
        "vesting_period#0 (copy)"
      ]
    },
    "335": {
      "op": "cover 3",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0",
        "vesting_period#0"
      ]
    },
    "337": {
      "op": "cover 6",
      "defined_out": [
        "allocation#0",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0",
        "start_time#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0"
      ]
    },
    "339": {
      "op": "dig 3",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0",
        "allocation#0 (copy)"
      ]
    },
    "341": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "allocation#0",
        "allocation#0 (copy)",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0",
        "start_time#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0",
        "allocation#0 (copy)",
        "8"
      ]
    },
    "343": {
      "op": "extract_uint64",
      "defined_out": [
        "allocation#0",
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0",
        "start_time#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0",
        "claimed_amount#0"
      ]
    },
    "344": {
      "op": "cover 6",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "current_time#0",
        "start_time#0",
        "allocation#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0"
      ]
    },
    "346": {
      "op": "uncover 3",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0",
        "allocation#0"
      ]
    },
    "348": {
      "op": "intc_0 // 0",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0",
        "allocation#0",
        "0"
      ]
    },
    "349": {
      "op": "extract_uint64",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0",
        "total_allocation#0"
      ]
    },
    "350": {
      "op": "cover 5",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0"
      ]
    },
    "352": {
      "op": "dig 4",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "current_time#0 (copy)",
        "last_claim_time#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "cliff_time#0",
        "last_claim_time#0",
        "current_time#0 (copy)"
      ]
    },
    "354": {
      "op": "uncover 2",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "last_claim_time#0",
        "current_time#0 (copy)",
        "cliff_time#0"
      ]
    },
    "356": {
      "op": ">=",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "last_claim_time#0",
        "sender#0",
        "start_time#0",
        "tmp%8#0",
        "total_allocation#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "last_claim_time#0",
        "tmp%8#0"
      ]
    },
    "357": {
      "error": "Cliff not reached",
      "op": "assert // Cliff not reached",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "last_claim_time#0"
      ]
    },
    "358": {
      "op": "dig 3",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "last_claim_time#0",
        "current_time#0 (copy)"
      ]
    },
    "360": {
      "op": "swap",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "current_time#0 (copy)",
        "last_claim_time#0"
      ]
    },
    "361": {
      "op": "-",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "sender#0",
        "start_time#0",
        "tmp%9#0",
        "total_allocation#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "tmp%9#0"
      ]
    },
    "362": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "sender#0",
        "start_time#0",
        "tmp%9#0",
        "total_allocation#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "tmp%9#0",
        "10"
      ]
    },
    "364": {
      "op": ">=",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "sender#0",
        "start_time#0",
        "tmp%10#0",
        "total_allocation#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0",
        "tmp%10#0"
      ]
    },
    "365": {
      "error": "Wait before claiming again",
      "op": "assert // Wait before claiming again",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0",
        "vesting_period#0"
      ]
    },
    "366": {
      "op": "+",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "end_time#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "end_time#0"
      ]
    },
    "367": {
      "op": ">=",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "sender#0",
        "start_time#0",
        "tmp%11#0",
        "total_allocation#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "tmp%11#0"
      ]
    },
    "368": {
      "op": "bz claim_else_body@2",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0"
      ]
    },
    "371": {
      "op": "frame_dig 6",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "vested#1",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "vested#1"
      ]
    },
    "373": {
      "block": "claim_after_if_else@3",
      "stack_in": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "vested#1"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "claimed_amount#0",
        "vested#1"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "vested#1",
        "claimed_amount#0"
      ]
    },
    "375": {
      "op": "dup",
      "defined_out": [
        "claimed_amount#0",
        "claimed_amount#0 (copy)",
        "vested#1"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "vested#1",
        "claimed_amount#0 (copy)",
        "claimed_amount#0 (copy)"
      ]
    },
    "376": {
      "op": "cover 2",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "vested#1",
        "claimed_amount#0 (copy)"
      ]
    },
    "378": {
      "op": "-",
      "defined_out": [
        "claimable#0",
        "claimed_amount#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0"
      ]
    },
    "379": {
      "op": "dup",
      "defined_out": [
        "claimable#0",
        "claimable#0 (copy)",
        "claimed_amount#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0",
        "claimable#0 (copy)"
      ]
    },
    "380": {
      "error": "Nothing to claim",
      "op": "assert // Nothing to claim",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0"
      ]
    },
    "381": {
      "op": "itxn_begin"
    },
    "382": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "claimable#0",
        "claimed_amount#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0",
        "0"
      ]
    },
    "383": {
      "op": "bytec_0 // \"asa\"",
      "defined_out": [
        "\"asa\"",
        "0",
        "claimable#0",
        "claimed_amount#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0",
        "0",
        "\"asa\""
      ]
    },
    "384": {
      "op": "app_global_get_ex",
      "defined_out": [
        "claimable#0",
        "claimed_amount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "385": {
      "error": "check self.asa exists",
      "op": "assert // check self.asa exists",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0",
        "maybe_value%2#0"
      ]
    },
    "386": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0"
      ]
    },
    "388": {
      "op": "dup",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0",
        "claimable#0 (copy)"
      ]
    },
    "389": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0"
      ]
    },
    "391": {
      "op": "frame_dig 0",
      "defined_out": [
        "claimable#0",
        "claimed_amount#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0",
        "sender#0"
      ]
    },
    "393": {
      "op": "dup",
      "defined_out": [
        "claimable#0",
        "claimed_amount#0",
        "sender#0",
        "sender#0 (copy)"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "claimed_amount#0",
        "claimable#0",
        "sender#0 (copy)",
        "sender#0 (copy)"
      ]
    },
    "394": {
      "op": "cover 3",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "claimed_amount#0",
        "claimable#0",
        "sender#0 (copy)"
      ]
    },
    "396": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "claimed_amount#0",
        "claimable#0"
      ]
    },
    "398": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "claimable#0",
        "claimed_amount#0",
        "sender#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "claimed_amount#0",
        "claimable#0",
        "axfer"
      ]
    },
    "399": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "claimed_amount#0",
        "claimable#0"
      ]
    },
    "401": {
      "op": "intc_0 // 0",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "claimed_amount#0",
        "claimable#0",
        "0"
      ]
    },
    "402": {
      "op": "itxn_field Fee",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "claimed_amount#0",
        "claimable#0"
      ]
    },
    "404": {
      "op": "itxn_submit"
    },
    "405": {
      "op": "frame_dig 6",
      "defined_out": [
        "claimable#0",
        "claimed_amount#0",
        "sender#0",
        "total_allocation#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "claimed_amount#0",
        "claimable#0",
        "total_allocation#0"
      ]
    },
    "407": {
      "op": "itob",
      "defined_out": [
        "claimable#0",
        "claimed_amount#0",
        "sender#0",
        "total_allocation#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "claimed_amount#0",
        "claimable#0",
        "val_as_bytes%0#0"
      ]
    },
    "408": {
      "op": "cover 2",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "claimed_amount#0",
        "claimable#0"
      ]
    },
    "410": {
      "op": "+",
      "defined_out": [
        "claimed_amount#0",
        "sender#0",
        "to_encode%0#0",
        "total_allocation#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "to_encode%0#0"
      ]
    },
    "411": {
      "op": "itob",
      "defined_out": [
        "claimed_amount#0",
        "sender#0",
        "total_allocation#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "412": {
      "op": "frame_dig 3",
      "defined_out": [
        "claimed_amount#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "start_time#0"
      ]
    },
    "414": {
      "op": "itob",
      "defined_out": [
        "claimed_amount#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "415": {
      "op": "frame_dig 2",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "cliff_time#0"
      ]
    },
    "417": {
      "op": "itob",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "418": {
      "op": "frame_dig 4",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "vesting_period#0"
      ]
    },
    "420": {
      "op": "itob",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0"
      ]
    },
    "421": {
      "op": "frame_dig 1",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "current_time#0"
      ]
    },
    "423": {
      "op": "itob",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ]
    },
    "424": {
      "op": "uncover 5",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%0#0"
      ]
    },
    "426": {
      "op": "uncover 5",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "428": {
      "op": "concat",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "encoded_tuple_buffer%2#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "429": {
      "op": "uncover 4",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "431": {
      "op": "concat",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "encoded_tuple_buffer%3#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%3#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "432": {
      "op": "uncover 3",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0"
      ]
    },
    "434": {
      "op": "concat",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "encoded_tuple_buffer%4#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "435": {
      "op": "uncover 2",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%4#0"
      ]
    },
    "437": {
      "op": "concat",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "encoded_tuple_buffer%5#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "val_as_bytes%5#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "val_as_bytes%5#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "438": {
      "op": "swap",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "encoded_tuple_buffer%5#0",
        "val_as_bytes%5#0"
      ]
    },
    "439": {
      "op": "concat",
      "defined_out": [
        "claimed_amount#0",
        "cliff_time#0",
        "current_time#0",
        "encoded_tuple_buffer%6#0",
        "sender#0",
        "start_time#0",
        "total_allocation#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "sender#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "440": {
      "op": "box_put",
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0"
      ]
    },
    "441": {
      "retsub": true,
      "op": "retsub"
    },
    "442": {
      "block": "claim_else_body@2",
      "stack_in": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "current_time#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0"
      ]
    },
    "444": {
      "op": "frame_dig 3",
      "defined_out": [
        "current_time#0",
        "start_time#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "current_time#0",
        "start_time#0"
      ]
    },
    "446": {
      "op": "-",
      "defined_out": [
        "current_time#0",
        "elapsed#0",
        "start_time#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "elapsed#0"
      ]
    },
    "447": {
      "op": "frame_dig 6",
      "defined_out": [
        "current_time#0",
        "elapsed#0",
        "start_time#0",
        "total_allocation#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "elapsed#0",
        "total_allocation#0"
      ]
    },
    "449": {
      "op": "*",
      "defined_out": [
        "current_time#0",
        "start_time#0",
        "tmp%12#0",
        "total_allocation#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "tmp%12#0"
      ]
    },
    "450": {
      "op": "frame_dig 4",
      "defined_out": [
        "current_time#0",
        "start_time#0",
        "tmp%12#0",
        "total_allocation#0",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "tmp%12#0",
        "vesting_period#0"
      ]
    },
    "452": {
      "op": "/",
      "defined_out": [
        "current_time#0",
        "start_time#0",
        "total_allocation#0",
        "vested#1",
        "vesting_period#0"
      ],
      "stack_out": [
        "sender#0",
        "current_time#0",
        "cliff_time#0",
        "start_time#0",
        "vesting_period#0",
        "claimed_amount#0",
        "total_allocation#0",
        "vested#1"
      ]
    },
    "453": {
      "op": "b claim_after_if_else@3"
    }
  }
}