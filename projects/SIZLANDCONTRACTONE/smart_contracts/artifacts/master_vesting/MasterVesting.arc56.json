{
    "name": "MasterVesting",
    "structs": {},
    "methods": [
        {
            "name": "register_vesting_contract",
            "args": [
                {
                    "type": "account",
                    "name": "contract_address"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_vesting_contract",
            "args": [
                {
                    "type": "uint64",
                    "name": "index"
                }
            ],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_into_asset",
            "args": [
                {
                    "type": "asset",
                    "name": "asset"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "contract_count": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "Y29udHJhY3RfY291bnQ="
                },
                "asa": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNh"
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "vesting_contracts": {
                    "keyType": "uint64",
                    "valueType": "address",
                    "prefix": "Y29udHJhY3Rz"
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        225
                    ],
                    "errorMessage": "ASA already opted in"
                },
                {
                    "pc": [
                        203
                    ],
                    "errorMessage": "Invalid contract index"
                },
                {
                    "pc": [
                        94,
                        112,
                        136
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        219
                    ],
                    "errorMessage": "Only creator can opt in to ASA"
                },
                {
                    "pc": [
                        170
                    ],
                    "errorMessage": "Only creator can register vesting contracts"
                },
                {
                    "pc": [
                        159
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        97,
                        115,
                        139
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        223
                    ],
                    "errorMessage": "check self.asa exists"
                },
                {
                    "pc": [
                        174,
                        200
                    ],
                    "errorMessage": "check self.contract_count exists"
                },
                {
                    "pc": [
                        209
                    ],
                    "errorMessage": "check self.vesting_contracts entry exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAEmAw5jb250cmFjdF9jb3VudANhc2EJY29udHJhY3RzMRhAAA8ogAgAAAAAAAAAAGcpImcxG0EAWoIDBNxfTxMEMevA1AQoJrICNhoAjgMALAAUAAIiQzEZFEQxGEQ2GgEXwDCIAGgjQzEZFEQxGEQ2GgGIAEWABBUffHVMULAjQzEZFEQxGEQ2GgEXwByIAA0jQzEZQP+9MRgURCNDigEAMQAyCRJEIihlRBdJFipMUIv/vyMIFihMZ4mKAQGL/xciKGVEFwxEKov/UL5EiYoBADEAMgkSRCIpZUQURCmL/2exMgqL/7IRshSBBLIQIrIBs4k=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}